@misc{Poker06,
  author =       "Poker-Edge.Com",
  year =         "2006",
  month =        mar,
  title =        "Stats and Analysis",
  lastaccessed = "June 7, 2006",
  url =          "http://www.poker-edge.com/stats.php",
}

@misc{steenhoek2023dataflow,
      title={Dataflow Analysis-Inspired Deep Learning for Efficient Vulnerability Detection}, 
      author={Benjamin Steenhoek and Hongyang Gao and Wei Le},
      year={2023},
      eprint={2212.08108},
      archivePrefix={arXiv},
      primaryClass={cs.SE}
}

@misc{zdibugs,
author = "Lucas Leong",
title = "Mindshare: When MySQL Cluster Encounters Taint Analysis",
howpublished = {\url{https://www.zerodayinitiative.com/blog/2022/2/10/mindshare-when-mysql-cluster-encounters-taint-analysis}},
year = 2022
}

@misc{semgrep,
author = "Semgrep",
title = "The Semgrep Platform",
howpublished = {\url{https://semgrep.dev/}},
year = 2023
}

@misc{codeql-taint,
author = "Semmle",
title = "CodeQL Documentation: Analyzing data flow in C and C++",
howpublished = {\url{https://codeql.github.com/docs/codeql-language-guides/analyzing-data-flow-in-cpp-new/}},
year = 2023
}

@misc{codeql-web,
author="GitHub",
title="CodeQL",
year={2024},
note={\url{https://codeql.github.com}},
}

@article{manes2018fuzzing,
  title={Fuzzing: Art, science, and engineering},
  author={Manes, Valentin JM and Han, HyungSeok and Han, Choongwoo and Cha, Sang Kil and Egele, Manuel and Schwartz, Edward J and Woo, Maverick},
  journal={arXiv preprint arXiv:1812.00140},
  year={2018}
}

@misc{codeqlqueries,
author = "Semmle",
title = "Vulnerabilities discovered by {CodeQL}",
howpublished = {\url{https://securitylab.github.com/advisories/}},
year = 2023
} 

@inproceedings{fu2022linevul,
  title={LineVul: A Transformer-based Line-Level Vulnerability Prediction},
  author={Fu, Michael and Tantithamthavorn, Chakkrit},
  booktitle={2022 IEEE/ACM 19th International Conference on Mining Software Repositories (MSR)},
  year={2022},
  organization={IEEE}
}

@misc{msbugs,
author = "Matt Miller",
title = "Microsoft: 70 percent of all security bugs are memory safety issues",
howpublished = {\url{https://www.zdnet.com/article/microsoft-70-percent-of-all-security-bugs-are-memory-safety-issues/}},
year = 2019
}

@article{hindle2016naturalness,
  title={On the naturalness of software},
  author={Hindle, Abram and Barr, Earl T and Gabel, Mark and Su, Zhendong and Devanbu, Premkumar},
  journal={Communications of the ACM},
  volume={59},
  number={5},
  pages={122--131},
  year={2016},
  publisher={ACM New York, NY, USA}
}

@inproceedings{bigvul, 
    author = {Fan, Jiahao and Li, Yi and Wang, Shaohua and Nguyen, Tien N.}, 
    title = {A C/C++ Code Vulnerability Dataset with Code Changes and CVE Summaries}, 
    year = {2020}, 
    isbn = {9781450375177}, 
    publisher = {Association for Computing Machinery}, 
    address = {New York, NY, USA}, 
    url = {https://doi.org/10.1145/3379597.3387501}, 
    doi = {10.1145/3379597.3387501}, 
    abstract = {We collected a large C/C++ code vulnerability dataset from open-source Github projects, namely Big-Vul. We crawled the public Common Vulnerabilities and Exposures (CVE) database and CVE-related source code repositories. Specifically, we collected the descriptive information of the vulnerabilities from the CVE database, e.g., CVE IDs, CVE severity scores, and CVE summaries. With the CVE information and its related published Github code repository links, we downloaded all of the code repositories and extracted vulnerability related code changes. In total, Big-Vul contains 3,754 code vulnerabilities spanning 91 different vulnerability types. All these code vulnerabilities are extracted from 348 Github projects. All information is stored in the CSV format. We linked the code changes with the CVE descriptive information. Thus, our Big-Vul can be used for various research topics, e.g., detecting and fixing vulnerabilities, analyzing the vulnerability related code changes. Big-Vul is publicly available on Github.}, 
    booktitle = {Proceedings of the 17th International Conference on Mining Software Repositories}, 
    pages = {508â€“512}, 
    numpages = {5}, 
    keywords = {C/C++ Code, Common Vulnerabilities and Exposures, Code Changes}, 
    location = {Seoul, Republic of Korea}, 
    series = {MSR '20} 
}

@inproceedings{Zhou2019DevignEV,
  title={Devign: Effective Vulnerability Identification by Learning Comprehensive Program Semantics via Graph Neural Networks},
  author={Yaqin Zhou and Shangqing Liu and J. Siow and Xiaoning Du and Yang Liu},
  booktitle={Neural Information Processing Systems},
  year={2019},
  url={https://api.semanticscholar.org/CorpusID:202539112}
}

@article{Cheng2022PathsensitiveCE,
  title={Path-sensitive code embedding via contrastive learning for software vulnerability detection},
  author={Xiao Cheng and Guanqin Zhang and Haoyu Wang and Yulei Sui},
  journal={Proceedings of the 31st ACM SIGSOFT International Symposium on Software Testing and Analysis},
  year={2022},
  url={https://api.semanticscholar.org/CorpusID:250562410}
}

@article{Li2018VulDeePeckerAD,
  title={VulDeePecker: A Deep Learning-Based System for Vulnerability Detection},
  author={Z. Li and Deqing Zou and Shouhuai Xu and Xinyu Ou and Hai Jin and Sujuan Wang and Zhijun Deng and Yuyi Zhong},
  journal={ArXiv},
  year={2018},
  volume={abs/1801.01681},
  url={https://api.semanticscholar.org/CorpusID:36051782}
}

@article{Li2020VulDeeLocatorAD,
  title={VulDeeLocator: A Deep Learning-Based Fine-Grained Vulnerability Detector},
  author={Zhuguo Li and Deqing Zou and Shouhuai Xu and Zhaoxuan Chen and Yawei Zhu and Hai Jin},
  journal={IEEE Transactions on Dependable and Secure Computing},
  year={2020},
  volume={19},
  pages={2821-2837},
  url={https://api.semanticscholar.org/CorpusID:210064554}
}

@misc{githubbounty,
  title={The Bug Slayer},
	author={GitHub},
	note={\url{https://securitylab.github.com/bounties}},
	year={2023}
}

@article{Chen2023DiverseVulAN,
  title={DiverseVul: A New Vulnerable Source Code Dataset for Deep Learning Based Vulnerability Detection},
  author={Yizheng Chen and Zhoujie Ding and Lamya Alowain and Xinyun Chen and David A. Wagner},
  journal={Proceedings of the 26th International Symposium on Research in Attacks, Intrusions and Defenses},
  year={2023},
  url={https://api.semanticscholar.org/CorpusID:257913395}
}

@article{Bhandari2021CVEfixesAC,
  title={CVEfixes: automated collection of vulnerabilities and their fixes from open-source software},
  author={Guru Prasad Bhandari and Amara Naseer and Leon Moonen},
  journal={Proceedings of the 17th International Conference on Predictive Models and Data Analytics in Software Engineering},
  year={2021},
  url={https://api.semanticscholar.org/CorpusID:236087844}
}

@article{Hin2022LineVDSV,
  title={LineVD: Statement-level Vulnerability Detection using Graph Neural Networks},
  author={David Hin and Andrey Kan and Huaming Chen and Muhammad Ali Babar},
  journal={2022 IEEE/ACM 19th International Conference on Mining Software Repositories (MSR)},
  year={2022},
  pages={596-607},
  url={https://api.semanticscholar.org/CorpusID:247362653}
}

@article{Zhang2023PromptEnhancedSV,
  title={Prompt-Enhanced Software Vulnerability Detection Using ChatGPT},
  author={Chenyuan Zhang and Hao Liu and Jiutian Zeng and Kejing Yang and Yuhong Li and Hui Li},
  journal={ArXiv},
  year={2023},
  volume={abs/2308.12697},
  url={https://api.semanticscholar.org/CorpusID:261100663}
}

@article{Li2018SySeVRAF,
  title={SySeVR: A Framework for Using Deep Learning to Detect Software Vulnerabilities},
  author={Z. Li and Deqing Zou and Shouhuai Xu and Hai Jin and Yawei Zhu and Zhaoxuan Chen and Sujuan Wang and Jialai Wang},
  journal={IEEE Transactions on Dependable and Secure Computing},
  year={2018},
  volume={19},
  pages={2244-2258},
  url={https://api.semanticscholar.org/CorpusID:49869471}
}

@article{Li2021VulnerabilityDW,
  title={Vulnerability detection with fine-grained interpretations},
  author={Yi Li and Shaohua Wang and Tien Nhut Nguyen},
  journal={Proceedings of the 29th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
  year={2021},
  url={https://api.semanticscholar.org/CorpusID:235490574}
}

@article{Chakraborty2020DeepLB,
  title={Deep Learning Based Vulnerability Detection: Are We There Yet?},
  author={Saikat Chakraborty and Rahul Krishna and Yangruibo Ding and Baishakhi Ray},
  journal={IEEE Transactions on Software Engineering},
  year={2020},
  volume={48},
  pages={3280-3296},
  url={https://api.semanticscholar.org/CorpusID:221703797}
}

@article{Steenhoek2022AnES,
  title={An Empirical Study of Deep Learning Models for Vulnerability Detection},
  author={Benjamin Steenhoek and Md. Mahbubur Rahman and Richard Jiles and Wei Le},
  journal={2023 IEEE/ACM 45th International Conference on Software Engineering (ICSE)},
  year={2022},
  pages={2237-2248},
  url={https://api.semanticscholar.org/CorpusID:254823409}
}

@article{Harzevili2023ASO,
  title={A Survey on Automated Software Vulnerability Detection Using Machine Learning and Deep Learning},
  author={Nima Shiri Harzevili and Alvine Boaye Belle and Junjie Wang and Song Wang and Zhen Ming Jack Jiang and Nachiappan Nagappan},
  journal={ArXiv},
  year={2023},
  volume={abs/2306.11673},
  url={https://api.semanticscholar.org/CorpusID:259203805}
}



@inproceedings{dataQuality2023,
  author={Croft, Roland and Babar, M. Ali and Kholoosi, M. Mehdi},
  booktitle={2023 IEEE/ACM 45th International Conference on Software Engineering (ICSE)}, 
  title={Data Quality for Software Vulnerability Datasets}, 
  year={2023},
  volume={},
  number={},
  pages={121-133},
  doi={10.1109/ICSE48619.2023.00022}
}

@inproceedings{croft2023data,
  title={Data quality for software vulnerability datasets},
  author={Croft, Roland and Babar, M Ali and Kholoosi, M Mehdi},
  booktitle={2023 IEEE/ACM 45th International Conference on Software Engineering (ICSE)},
  pages={121--133},
  year={2023},
  organization={IEEE}
}

@article{chen2023diversevul,
  title={DiverseVul: A New Vulnerable Source Code Dataset for Deep Learning Based Vulnerability Detection},
  author={Chen, Yizheng and Ding, Zhoujie and Chen, Xinyun and Wagner, David},
  journal={arXiv preprint arXiv:2304.00409},
  year={2023}
}


@misc{owasp,
      key={OWASP Benchmark Suite}, 
      year={2023},
      note={\url{https://owasp.org/www-project-benchmark}}
}

@misc{julietcpp,
     key={Juliet C/C++}, 
      year={2023},
      note={\url{https://samate.nist.gov/SARD/test-suites/112}}
}
@misc{julietjava,
     key={Juliet Java}, 
      year={2023},
      note={\url{https://samate.nist.gov/SARD/test-suites/111}}
}

@article{boland2012juliet,
  title={Juliet 1. 1 C/C++ and java test suite},
  author={Boland, Tim and Black, Paul E},
  journal={Computer},  
  year={2012}
}

@book{black2018juliet,
  title={Juliet 1.3 test suite: Changes from 1.2},
  author={Black, Paul E and Black, Paul E},
  year={2018},
  publisher={US Department of Commerce, National Institute of Standards and Technology}
}

@misc{huggingface,
     key={Hugging Face}, 
      year={2023},
      url={https://huggingface.co/},
      note={\url{https://huggingface.co/}}
}



@article{roziere2023code,
  title={Code llama: Open foundation models for code},
  author={Rozi{\`e}re, Baptiste and Gehring, Jonas and Gloeckle, Fabian and Sootla, Sten and Gat, Itai and Tan, Xiaoqing Ellen and Adi, Yossi and Liu, Jingyu and Remez, Tal and Rapin, J{\'e}r{\'e}my and others},
  journal={arXiv preprint arXiv:2308.12950},
  year={2023}
}


@article{shinn2023reflexion,
  title={Reflexion: Language agents with verbal reinforcement learning},
  author={Shinn, Noah and Cassano, Federico and Labash, Beck and Gopinath, Ashwin and Narasimhan, Karthik and Yao, Shunyu},
  journal={arXiv preprint arXiv:2303.11366},
  volume={14},
  year={2023},
  publisher={Jun}
}

@article{gao2023discrete, 
author = {Gao, Fengjuan and Wang, Yu and Wang, Ke}, 
title = {Discrete Adversarial Attack to Models of Code}, 
year = {2023}, 
issue_date = {June 2023},
publisher = {Association for Computing Machinery}, 
address = {New York, NY, USA}, 
volume = {7}, 
number = {PLDI}, 
url = {https://doi.org/10.1145/3591227}, 
doi = {10.1145/3591227}
}


@inproceedings{codeql,
  title={QL: Object-oriented Queries on Relational Data},
  author={Pavel Avgustinov and Oege de Moor and Michael Peyton Jones and Max Sch{\"a}fer},
  booktitle={European Conference on Object-Oriented Programming},
  year={2016},
  url={https://api.semanticscholar.org/CorpusID:13385963}
}

@misc{bubeck2023gpt4,
      title={Sparks of Artificial General Intelligence: Early experiments with GPT-4}, 
      author={SÃ©bastien Bubeck and Varun Chandrasekaran and Ronen Eldan and Johannes Gehrke and Eric Horvitz and Ece Kamar and Peter Lee and Yin Tat Lee and Yuanzhi Li and Scott Lundberg and Harsha Nori and Hamid Palangi and Marco Tulio Ribeiro and Yi Zhang},
      year={2023},
      eprint={2303.12712},
      archivePrefix={arXiv},
      primaryClass={cs.CL}
}

@article{Thapa2022TransformerBasedLM,
  title={Transformer-Based Language Models for Software Vulnerability Detection},
  author={Chandra Thapa and Seung Ick Jang and Muhammad Ejaz Ahmed and Seyit Ahmet Ã‡amtepe and Josef Pieprzyk and Surya Nepal},
  journal={Proceedings of the 38th Annual Computer Security Applications Conference},
  year={2022},
  url={https://api.semanticscholar.org/CorpusID:248006164}
}

@misc{mitretop,
  key={MITRE Top 25 CWEs}, 
  year={2023},
  url={https://cwe.mitre.org/top25/archive/2023/2023\_top25\_list.html},
  note={\url{https://cwe.mitre.org/top25/archive/2023/2023\_top25\_list.html}}
}
@misc{librariesio,
      key={Libraries.io}, 
      year={2024},
      note={\url{https://libraries.io}}
}
@misc{synkiodb,
      title={Snyk.io Vulnerability Database}, 
      year={2024},
      url={https://security.snyk.io/vuln},
      note={\url{https://security.snyk.io/vuln}}
}
@misc{synkio,
      title={Snyk.io}, 
      year={2024},
      url={https://snyk.io},
      note={\url{https://snyk.io}}
}
@misc{sweagent,
      key={SWE Agent}, 
      year={2024},
      url={https://swe-agent.com},
      note={\url{https://swe-agent.com}}
}


@misc{sonarqube,
      key={SonarQube}, 
      year={2024},
      url={https://www.sonarsource.com/products/sonarqube},
      note={\url{https://www.sonarsource.com/products/sonarqube}}
}
@misc{cvedetails,
      key={CVE Trends}, 
      year={2024},
      url={https://www.cvedetails.com},
      note={\url{https://www.cvedetails.com}}
}

@misc{xzbackdoor,
  key={XZ Backdoor},
  year={2024},
  url={https://arstechnica.com/security/2024/04/what-we-know-about-the-xz-utils-backdoor-that-almost-infected-the-world},
  note={\url{https://arstechnica.com/security/2024/04/what-we-know-about-the-xz-utils-backdoor-that-almost-infected-the-world}}
}

@inproceedings{lemieux2023codamosa,
  title={CODAMOSA: Escaping coverage plateaus in test generation with pre-trained large language models},
  author={Lemieux, Caroline and Inala, Jeevana Priya and Lahiri, Shuvendu K and Sen, Siddhartha},
  booktitle={International conference on software engineering (ICSE)},
  year={2023}
}

@inproceedings{deng2023large,
  title={Large language models are zero-shot fuzzers: Fuzzing deep-learning libraries via large language models},
  author={Deng, Yinlin and Xia, Chunqiu Steven and Peng, Haoran and Yang, Chenyuan and Zhang, Lingming},
  booktitle={Proceedings of the 32nd ACM SIGSOFT International Symposium on Software Testing and Analysis},
  pages={423--435},
  year={2023}
}

@inproceedings{xia2023automated,
  title={Automated program repair in the era of large pre-trained language models},
  author={Xia, Chunqiu Steven and Wei, Yuxiang and Zhang, Lingming},
  booktitle={Proceedings of the 45th International Conference on Software Engineering (ICSE 2023). Association for Computing Machinery},
  year={2023}
}
@article{zhang2023multilingual,
  title={Multilingual Code Co-Evolution Using Large Language Models},
  author={Zhang, Jiyang and Nie, Pengyu and Li, Junyi Jessy and Gligoric, Milos},
  journal={arXiv preprint arXiv:2307.14991},
  year={2023}
}
@article{yang2023large,
  title={Large Language Models for Test-Free Fault Localization},
  author={Yang, Aidan ZH and Martins, Ruben and Goues, Claire Le and Hellendoorn, Vincent J},
  journal={arXiv preprint arXiv:2310.01726},
  year={2023}
}
@inproceedings{joshi2023repair,
  title={Repair is nearly generation: Multilingual program repair with llms},
  author={Joshi, Harshit and Sanchez, Jos{\'e} Cambronero and Gulwani, Sumit and Le, Vu and Verbruggen, Gust and Radi{\v{c}}ek, Ivan},
  booktitle={Proceedings of the AAAI Conference on Artificial Intelligence},
  volume={37},
  number={4},
  pages={5131--5140},
  year={2023}
}
@inproceedings{xia2022less,
  title={Less training, more repairing please: revisiting automated program repair via zero-shot learning},
  author={Xia, Chunqiu Steven and Zhang, Lingming},
  booktitle={Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
  pages={959--971},
  year={2022}
}

@misc{flawfinder,
     key={FlawFinder}, 
    year={2023},
url={https://dwheeler.com/flawfinder}
}

@misc{cppcheck,
key={CPPCheck}, 
year={2023},
url={https://cppcheck.sourceforge.io/},
note={\url{https://cppcheck.sourceforge.io/}}
}

@misc{fbinfer,
key={FB Infer}, 
year={2023},
url={https://fbinfer.com/},
note={\url{https://fbinfer.com/}}
}
@misc{checker,
key={Checker Framework},
year={2024},
url={https://checkerframework.org/},
note={\url{https://checkerframework.org/}}
}

@misc{codechecker,
key={Code Checker},
year={2023},
url={https://github.com/Ericsson/codechecker},
note={\url{https://github.com/Ericsson/codechecker}}
}

@article{copilot,
  title={Evaluating Large Language Models Trained on Code},
  author={Mark Chen and Jerry Tworek and Heewoo Jun and Qiming Yuan and Henrique Ponde and Jared Kaplan and Harrison Edwards and Yura Burda and Nicholas Joseph and Greg Brockman and Alex Ray and Raul Puri and Gretchen Krueger and Michael Petrov and Heidy Khlaaf and Girish Sastry and Pamela Mishkin and Brooke Chan and Scott Gray and Nick Ryder and Mikhail Pavlov and Alethea Power and Lukasz Kaiser and Mohammad Bavarian and Clemens Winter and Philippe Tillet and Felipe Petroski Such and David W. Cummings and Matthias Plappert and Fotios Chantzis and Elizabeth Barnes and Ariel Herbert-Voss and William H. Guss and Alex Nichol and Igor Babuschkin and S. Arun Balaji and Shantanu Jain and Andrew Carr and Jan Leike and Joshua Achiam and Vedant Misra and Evan Morikawa and Alec Radford and Matthew M. Knight and Miles Brundage and Mira Murati and Katie Mayer and Peter Welinder and Bob McGrew and Dario Amodei and Sam McCandlish and Ilya Sutskever and Wojciech Zaremba},
  journal={ArXiv},
  year={2021},
  volume={abs/2107.03374},
  url={https://api.semanticscholar.org/CorpusID:235755472}
}

@article{Wei2022EmergentAO,
  title={Emergent Abilities of Large Language Models},
  author={Jason Wei and Yi Tay and Rishi Bommasani and Colin Raffel and Barret Zoph and Sebastian Borgeaud and Dani Yogatama and Maarten Bosma and Denny Zhou and Donald Metzler and Ed Huai-hsin Chi and Tatsunori Hashimoto and Oriol Vinyals and Percy Liang and Jeff Dean and William Fedus},
  journal={Trans. Mach. Learn. Res.},
  year={2022},
  volume={2022},
  url={https://api.semanticscholar.org/CorpusID:249674500}
}

@article{Wei2022ChainOT,
  title={Chain of Thought Prompting Elicits Reasoning in Large Language Models},
  author={Jason Wei and Xuezhi Wang and Dale Schuurmans and Maarten Bosma and Ed Huai-hsin Chi and F. Xia and Quoc Le and Denny Zhou},
  journal={ArXiv},
  year={2022},
  volume={abs/2201.11903},
  url={https://api.semanticscholar.org/CorpusID:246411621}
}

@article{Yao2022ReActSR,
  title={ReAct: Synergizing Reasoning and Acting in Language Models},
  author={Shunyu Yao and Jeffrey Zhao and Dian Yu and Nan Du and Izhak Shafran and Karthik Narasimhan and Yuan Cao},
  journal={ArXiv},
  year={2022},
  volume={abs/2210.03629},
  url={https://api.semanticscholar.org/CorpusID:252762395}
}

@misc{cqljava,
key={CodeQL Java CWE},
year={2023},
note={\url{https://codeql.github.com/codeql-query-help/java-cwe/}}
}

@misc{cqlcpp,
key={CodeQL CPP CWE},
year={2023},
note={\url{https://codeql.github.com/codeql-query-help/cpp-cwe/}}
}


@misc{cve-2022-3602,
key={CVE-2022-3602},
year={2022},
note={\url{https://nvd.nist.gov/vuln/detail/CVE-2022-3602}}
}

@misc{cve-2022-3786,
key={CVE-2022-3786},
year={2022},
note={\url{https://nvd.nist.gov/vuln/detail/CVE-2022-3786}}
}


@article{li2023starcoder,
  title={StarCoder: may the source be with you!},
  author={Li, Raymond and Allal, Loubna Ben and Zi, Yangtian and Muennighoff, Niklas and Kocetkov, Denis and Mou, Chenghao and Marone, Marc and Akiki, Christopher and Li, Jia and Chim, Jenny and others},
  journal={arXiv preprint arXiv:2305.06161},
  year={2023}
}

@inproceedings{codebert,
    title = "{C}ode{BERT}: A Pre-Trained Model for Programming and Natural Languages",
    author = "Feng, Zhangyin  and
      Guo, Daya  and
      Tang, Duyu  and
      Duan, Nan  and
      Feng, Xiaocheng  and
      Gong, Ming  and
      Shou, Linjun  and
      Qin, Bing  and
      Liu, Ting  and
      Jiang, Daxin  and
      Zhou, Ming",
    editor = "Cohn, Trevor  and
      He, Yulan  and
      Liu, Yang",
    booktitle = "Findings of the Association for Computational Linguistics: EMNLP 2020",
    month = nov,
    year = "2020",
    address = "Online",
    publisher = "Association for Computational Linguistics",
    url = "https://aclanthology.org/2020.findings-emnlp.139",
    doi = "10.18653/v1/2020.findings-emnlp.139",
    pages = "1536--1547",
    abstract = "We present CodeBERT, a bimodal pre-trained model for programming language (PL) and natural language (NL). CodeBERT learns general-purpose representations that support downstream NL-PL applications such as natural language code search, code documentation generation, etc. We develop CodeBERT with Transformer-based neural architecture, and train it with a hybrid objective function that incorporates the pre-training task of replaced token detection, which is to detect plausible alternatives sampled from generators. This enables us to utilize both {``}bimodal{''} data of NL-PL pairs and {``}unimodal data, where the former provides input tokens for model training while the latter helps to learn better generators. We evaluate CodeBERT on two NL-PL applications by fine-tuning model parameters. Results show that CodeBERT achieves state-of-the-art performance on both natural language code search and code documentation generation. Furthermore, to investigate what type of knowledge is learned in CodeBERT, we construct a dataset for NL-PL probing, and evaluate in a zero-shot setting where parameters of pre-trained models are fixed. Results show that CodeBERT performs better than previous pre-trained models on NLPL probing.",
}

@article{Salewski2023InContextIR,
  title={In-Context Impersonation Reveals Large Language Models' Strengths and Biases},
  author={Leonard Salewski and Stephan Alaniz and Isabel Rio-Torto and Eric Schulz and Zeynep Akata},
  journal={ArXiv},
  year={2023},
  volume={abs/2305.14930},
  url={https://api.semanticscholar.org/CorpusID:258866192}
}

@article{liu2024lost,
  title={Lost in the middle: How language models use long contexts},
  author={Liu, Nelson F and Lin, Kevin and Hewitt, John and Paranjape, Ashwin and Bevilacqua, Michele and Petroni, Fabio and Liang, Percy},
  journal={Transactions of the Association for Computational Linguistics},
  volume={12},
  pages={157--173},
  year={2024},
  publisher={MIT Press One Broadway, 12th Floor, Cambridge, Massachusetts 02142, USA~â€¦}
}
@misc{ghadvdb,
  title={GitHub Advisory Database},
  author={GitHub},
  year={2024},
  note={\url{https://github.com/advisories}}
}
@misc{ghadvgithub,
title={GitHub Security Advisories},
author={GitHub},
year={2024},
note={\url{https://github.com/github/advisory-database}}
}
@inproceedings{he2023large,
  title={Large language models for code: Security hardening and adversarial testing},
  author={He, Jingxuan and Vechev, Martin},
  booktitle={Proceedings of the 2023 ACM SIGSAC Conference on Computer and Communications Security},
  pages={1865--1879},
  year={2023}
}
@inproceedings{li2023comparison,
  title={Comparison and Evaluation on Static Application Security Testing (SAST) Tools for Java},
  author={Li, Kaixuan and Chen, Sen and Fan, Lingling and Feng, Ruitao and Liu, Han and Liu, Chengwei and Liu, Yang and Chen, Yixiang},
  booktitle={Proceedings of the 31st ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
  pages={921--933},
  year={2023}
}
@inproceedings{kang2022detecting,
  title={Detecting false alarms from automatic static analysis tools: How far are we?},
  author={Kang, Hong Jin and Aw, Khai Loong and Lo, David},
  booktitle={Proceedings of the 44th International Conference on Software Engineering},
  pages={698--709},
  year={2022}
}
@inproceedings{johnson2013don,
  title={Why don't software developers use static analysis tools to find bugs?},
  author={Johnson, Brittany and Song, Yoonki and Murphy-Hill, Emerson and Bowdidge, Robert},
  booktitle={2013 35th International Conference on Software Engineering (ICSE)},
  pages={672--681},
  year={2013},
  organization={IEEE}
}
@article{livshits2009merlin,
  title={Merlin: Specification inference for explicit information flow problems},
  author={Livshits, Benjamin and Nori, Aditya V and Rajamani, Sriram K and Banerjee, Anindya},
  journal={ACM Sigplan Notices},
  volume={44},
  number={6},
  pages={75--86},
  year={2009},
  publisher={ACM New York, NY, USA}
}


@inproceedings{dutta2022inspectjs,
  title={Inspectjs: Leveraging code similarity and user-feedback for effective taint specification inference for javascript},
  author={Dutta, Saikat and Garbervetsky, Diego and Lahiri, Shuvendu K and Sch{\"a}fer, Max},
  booktitle={Proceedings of the 44th International Conference on Software Engineering: Software Engineering in Practice},
  pages={165--174},
  year={2022}
}
@inproceedings{chibotaru2019scalable,
  title={Scalable taint specification inference with big code},
  author={Chibotaru, Victor and Bichsel, Benjamin and Raychev, Veselin and Vechev, Martin},
  booktitle={Proceedings of the 40th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages={760--774},
  year={2019}
}
@inproceedings{ranking2014finding,
  title={Finding Patterns in Static Analysis Alerts},
  author={Ranking, Improving Actionable Alert},
  booktitle={Proceedings of the 11th working conference on mining software repositories},
  year={2014},
  publisher={Citeseer}
}
@inproceedings{heckman2009model,
  title={A model building process for identifying actionable static analysis alerts},
  author={Heckman, Sarah and Williams, Laurie},
  booktitle={2009 International conference on software testing verification and validation},
  pages={161--170},
  year={2009},
  organization={IEEE}
}
@inproceedings{jung2005taming,
  title={Taming false alarms from a domain-unaware C analyzer by a bayesian statistical post analysis},
  author={Jung, Yungbum and Kim, Jaehwang and Shin, Jaeho and Yi, Kwangkeun},
  booktitle={International Static Analysis Symposium},
  pages={203--217},
  year={2005},
  organization={Springer}
}
@inproceedings{pan2024lost,
  title={Lost in translation: A study of bugs introduced by large language models while translating code},
  author={Pan, Rangeet and Ibrahimzada, Ali Reza and Krishna, Rahul and Sankar, Divya and Wassi, Lambert Pouguem and Merler, Michele and Sobolev, Boris and Pavuluri, Raju and Sinha, Saurabh and Jabbarvand, Reyhaneh},
  booktitle={2024 IEEE/ACM 46th International Conference on Software Engineering (ICSE)},
  pages={866--866},
  year={2024},
  organization={IEEE Computer Society}
}

@article{li2024enhancing,
  title={Enhancing Static Analysis for Practical Bug Detection: An LLM-Integrated Approach},
  author={Li, Haonan and Hao, Yu and Zhai, Yizhuo and Qian, Zhiyun},
  journal={Proceedings of the ACM on Programming Languages (PACMPL), Issue OOPSLA},
  year={2024}
}

@inbook{luigi2020spotbugs,
author = {Lavazza, Luigi and Tosi, Davide and Morasca, Sandro},
year = {2020},
month = {08},
pages = {144-151},
title = {An Empirical Study on the Persistence of SpotBugs Issues in Open-Source Software Evolution},
isbn = {978-3-030-58792-5},
doi = {10.1007/978-3-030-58793-2_12}
}

@article{steenhoek2024comprehensive,
  title={A Comprehensive Study of the Capabilities of Large Language Models for Vulnerability Detection},
  author={Steenhoek, Benjamin and Rahman, Md Mahbubur and Roy, Monoshi Kumar and Alam, Mirza Sanjida and Barr, Earl T and Le, Wei},
  journal={arXiv preprint arXiv:2403.17218},
  year={2024}
}
@article{khare2023understanding,
  title={Understanding the Effectiveness of Large Language Models in Detecting Security Vulnerabilities},
  author={Khare, Avishree and Dutta, Saikat and Li, Ziyang and Solko-Breslin, Alaia and Alur, Rajeev and Naik, Mayur},
  journal={arXiv preprint arXiv:2311.16169},
  year={2023}
}
@article{jimenez2023swe,
  title={Swe-bench: Can language models resolve real-world github issues?},
  author={Jimenez, Carlos E and Yang, John and Wettig, Alexander and Yao, Shunyu and Pei, Kexin and Press, Ofir and Narasimhan, Karthik},
  journal={arXiv preprint arXiv:2310.06770},
  year={2023}
}
@inproceedings{smaragdakis2010using,
  title={Using Datalog for fast and easy program analysis},
  author={Smaragdakis, Yannis and Bravenboer, Martin},
  booktitle={International Datalog 2.0 Workshop},
  pages={245--251},
  year={2010},
  organization={Springer}
}
@article{ding2024vulnerability,
  title={Vulnerability Detection with Code Language Models: How Far Are We?},
  author={Ding, Yangruibo and Fu, Yanjun and Ibrahim, Omniyyah and Sitawarin, Chawin and Chen, Xinyun and Alomair, Basel and Wagner, David and Ray, Baishakhi and Chen, Yizheng},
  journal={arXiv preprint arXiv:2403.18624},
  year={2024}
}
@inproceedings{lipp2022empirical,
  title={An empirical study on the effectiveness of static C code analyzers for vulnerability detection},
  author={Lipp, Stephan and Banescu, Sebastian and Pretschner, Alexander},
  booktitle={Proceedings of the 31st ACM SIGSOFT International Symposium on Software Testing and Analysis},
  pages={544--555},
  year={2022}
}
@inproceedings{rasthofer2014machine,
  title={A machine-learning approach for classifying and categorizing android sources and sinks.},
  author={Rasthofer, Siegfried and Arzt, Steven and Bodden, Eric},
  booktitle={NDSS},
  volume={14},
  pages={1125},
  year={2014}
}
@article{zhang2024autocoderover,
  title={AutoCodeRover: Autonomous Program Improvement},
  author={Zhang, Yuntong and Ruan, Haifeng and Fan, Zhiyu and Roychoudhury, Abhik},
  journal={arXiv preprint arXiv:2404.05427},
  year={2024}
}
@inproceedings{xia2024fuzz4all,
  title={Fuzz4all: Universal fuzzing with large language models},
  author={Xia, Chunqiu Steven and Paltenghi, Matteo and Le Tian, Jia and Pradel, Michael and Zhang, Lingming},
  booktitle={Proceedings of the IEEE/ACM 46th International Conference on Software Engineering},
  pages={1--13},
  year={2024}
}
@article{bouzenia2024repairagent,
  title={RepairAgent: An Autonomous, LLM-Based Agent for Program Repair},
  author={Bouzenia, Islem and Devanbu, Premkumar and Pradel, Michael},
  journal={arXiv preprint arXiv:2403.17134},
  year={2024}
}
@inproceedings{cao2023gadget, 
  author = {Cao, Sicong and Sun, Xiaobing and Wu, Xiaoxue and Bo, Lili and Li, Bin and Wu, Rongxin and Liu, Wei and He, Biao and Ouyang, Yu and Li, Jiajia}, 
  title = {Improving Java Deserialization Gadget Chain Mining via Overriding-Guided Object Generation}, 
  year = {2023}, 
  doi = {10.1109/ICSE48619.2023.00044},
  booktitle = {Proceedings of the 45th International Conference on Software Engineering (ICSE)}
}